Imports: { 
import static gate.Utils.*; 
}

Phase: MarkProfileSection
Input: Token
Options: control = once debug = false
Rule: MarkSections
(
	{Token}
)
-->
{
	try{

		AnnotationSet section_headingAnnots = inputAS.get("SectionHeading");

	    List<Annotation> sec_heads = section_headingAnnots.inDocumentOrder();

		FeatureMap profileHeadingFeature = Factory.newFeatureMap();
		profileHeadingFeature.put("kind", "profile");

		Long startOffset, endOffset = sec_heads.get(0).getStartNode().getOffset();
		int index = 0;

		if( section_headingAnnots.get("SectionHeading", profileHeadingFeature).size() == 0){	
			startOffset = new Long(0);
			outputAS.add(startOffset, endOffset, "Section", profileHeadingFeature);
		};  

	    for (int i = 0; i < sec_heads.size() - 1; i++) {  
	    	FeatureMap feature = Factory.newFeatureMap();
			feature.put("kind", sec_heads.get(i).getFeatures().get("kind"));
	    	startOffset = endOffset;
	    	endOffset = sec_heads.get(i + 1).getStartNode().getOffset();
	    	outputAS.add(startOffset, endOffset, "Section", feature);
		}

		FeatureMap finalFeature = Factory.newFeatureMap();
		finalFeature.put("kind", sec_heads.get(sec_heads.size() - 1).getFeatures().get("kind"));

		outputAS.add(endOffset, doc.getContent().size(), "Section", finalFeature);
		}
	catch(InvalidOffsetException e)
	{}
}