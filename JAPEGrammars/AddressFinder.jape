Phase: AddressFinder
Input: Token Lookup
Options: control = appelt debug = false
MACRO: ADDRESS_WORD
(
  {Token.kind==word, Token.category==NNP, Token.orth==upperInitial} | 
  {Token.kind==word, Token.category==NNPS, Token.orth==upperInitial} | 
  {Token.kind==word, Token.category==NN} | 
  {Token.kind==word, Token.category==NNS} | 
  {Token.kind==word, Token.category==NP} | 
  {Token.kind==word, Token.category==NPS} | 
  {Token.kind==word, Token.category==CD} | 
  {Token.kind==word, Token.category==FW} | 
  {Token.kind==word, Token.category==NNP, Token.orth==allCaps} |
  {Token.kind==word, Token.category==NNPS, Token.orth==allCaps}
 )

Rule: AddressRule
(
 {Token.kind == number}//building number or house number
 ({Token.string == ","})?
 (ADDRESS_WORD)[1,5] //street name
 ({Token.kind == punctuation})?//number indicator such as #
 ({Token.kind == number})?//apt. number
 (
  ({Token.string == ","})?
  (ADDRESS_WORD)
  ({Token.string == ","})?
 )[0,6]
 ({Token.kind==word,Token.orth==allCaps} | {Token.kind==word,Token.orth==allCaps} | {Lookup.majorType==state})
 ({Token.string == "-"})?
 ({Token.string == ","})?
 {Token.kind == number}
)
:addressLookup
-->
{
	AnnotationSet addressSet = bindings.get("addressLookup");
	AnnotationSet profileSection = inputAS.get("ProfileSection");

	if(addressSet != null && addressSet.size() > 0){
		//Try to find the address within the most probable location (first 10 lines of the document; a.k.a within the first page)
		AnnotationSet addresses = addressSet.getContained(profileSection.firstNode().getOffset(),profileSection.lastNode().getOffset());
		if(addresses != null && addresses.size() > 0 && addressSet.lastNode().getOffset() <= profileSection.lastNode().getOffset()){
			FeatureMap features = Factory.newFeatureMap();
			features.put("rule","AddressRule");
			features.put("kind","address");
			outputAS.add(addresses.firstNode(),addresses.lastNode(),"AddressFinder",features);
		}
	}
}
